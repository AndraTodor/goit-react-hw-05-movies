{"version":3,"file":"static/js/493.d73b1af6.chunk.js","mappings":"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","sources":["pages/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(data => setCast(data.cast));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <p>\n              {actor.name} as {actor.character}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const API_KEY = 'e1796b07bf1840be8714f1cc473f123c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Failed to fetch trending movies');\n  }\n  return await response.json();\n};\n\nexport const searchMovies = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  if (!response.ok) {\n    throw new Error('Failed to search movies');\n  }\n  return await response.json();\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Failed to fetch movie details');\n  }\n  return await response.json();\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Failed to fetch movie credits');\n  }\n  return await response.json();\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Failed to fetch movie reviews');\n  }\n  return await response.json();\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","getMovieCredits","then","data","_jsx","children","map","actor","_jsxs","name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","getTrendingMovies","_ref","_regeneratorRuntime","_callee","response","_context","prev","next","fetch","concat","sent","ok","Error","json","abrupt","stop","searchMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}